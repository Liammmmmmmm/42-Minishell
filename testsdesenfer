echo '$USER'"$HOME_test]123'$PATH'"$PWD_$SHELL"'$VAR_name'"$HOME_test]123
# pour des tests effectifs remplacez command par des vrai commandes
< r1 < r2 command > r3 > r4 && > r1 > r2 command > r3 > r4
> r1 > r2 command arg1 > r3 arg2 > r4 arg3 && > r1 > r2 command arg1 > r3 arg2 > r4 arg3
command | (command || command) | command
command | (command && command) | command
echo aaa && (echdddo bbb || ecddho ccc) || echo ddd
echdddo bbb || ecddho ccc || echo ddd
cat << eof > test.txt
(ls | cat) > test.txt


echo '"'"$USER"'"'
export test=$test"coucou"
echo mdrr 1<>coucou
echo mdrr 2<>coucou
echo coucou > "ihi aha"ihi
echo >mdr>hey>>sarace \sal"mdr"
echo <hey1<h'ey2'
echo bonjour >hey >>hey2 >>hey3
>> e
ls $HOME/Desktop
echo “$PATH”
echo "$PATH$PWD"
echo -n a '' b '' c '' d
e"ch"o bonjour
echo\ bonjour
exit ' 3'
exit -1
exit -9223372036854775808
exit 9223372036854775807
exit +3 
exit 2000000
exit -2147483649
exit 0 bonjour ->	bash: exit: too many arguments
exit coucou    ->	exit: coucou: numeric argument required
cat Makefile | ./minishell
Essayer d'exécuter un mini shell dans minishell ./minishell et tester les signaux et le man de commandes
./minishell coucou (doit renvoyer une erreur)
echo "$ejnzefc" hey
./minishell 2>lol (redirection de stderr, aucuns messages d'erreurs ne doivent s'imprimer dans le terminal)
env -i ./minishell (= lance sans les var d’env)
export TEST='""' -> puis echo "$TEST"
export test='""' puis echo "'$test'"
export test="''" puis echo $test ''
export test='echo $USER C"es"t'
export test='echo C"est > $out'
$test (avec test vide)
echo \\ 
echo "\" 
echo coucou > "ihi aha"ihi
export test=truc
| echo coucou
export test="\"
echo' a'
tab
cat <<"<<""<"
<<"<">>"<"
<< ""
>>> log 
>>>>> log
> >> log
><<log
> log2
">"
|
|||||||
echo $
echo hello |
<"" 
export TEST='""'
yes $USER
exp"$hello"ort""''""
export test="truc truc"
echo $ejknfenf hey
export cmd="echo 'bonjour""ihi'"
export lol2="\'" puis echo $lol2
export TEST="''" -> puis echo $TEST
export TEST='""' -> puis echo $TEST
<< 'test' et << "test" ne doivent pas gerer les expansions
export A=a B=b C=c D=d E=e F=f G=g H=h I=i J=j K=k L=l M=m N=n O=o P=p Q=q R=r
unset A B C D E F G H I J K L M N O P Q R
cat Makefile > z | cat z | wc -l > r | ls
echo "$""USER"

dans le here_doc :
<< 'test' et << "test" ne doivent pas gerer les $
<< $USER
 
export path=
=> afficher test dans env ET export

export path
=> afficher test dans export mais PAS dans env

export "ceci"="cela"
export lol=""
export lol=" "
export lol2=''
export lol2=' '
export lol2="\'"
export lol2="'"
export lol2="'"
export lol2="\\"
export lol2='$'
export lol2='\t'
export test=hello hello="poulette"
export test2=
export test1
export test= o
export test=$test"coucou"
export zz zzz= zzzz=asd
export ?=42
export $
export 1=a
export BONJOURJESUIS =a
export BONJOUR\\JESUIS=a
export BONJOUR\'JESUIS=a
export BONJOUR\&JESUIS=a 
export BONJOUR\|JESUIS=a
export BONJOUR\;JESUIS=a
export 'AH\'=nop
export 'AH@'=nop
export 'AH"'=nop
export 'AH!'=nop
export A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C
export "  a"=coucou
export _test=quelquechose puis echo $test

unset quelque chose qui n'existe pas
unset plusieurs trucs a la fois
 
echo test | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e| cat -e
cat /dev/random | head -c 100 | wc -c
ls asdfasdf | echo a
echo a | ls asdfasdf

#Boucle infinie : (ne pas segfault)
cat -e /dev/random | head -c 10
cat -e /dev/random | cat -e | head -c 10
cat -e /dev/random | cat -e | cat -e | head -c 10

##########Protections#########
'echo' "bonjour" "wesh"
e"ch"o bonjour
       'ech'o bonjour
'echo "$HOME"'
echo '''''' | cat -e

##########Redirections#########
cat < test.txt
cat <test.txt >>hello<bonjour
cat "<test.txt"
echo bonjour1>test1
echo bonjour 1>test2
echo bonjour > "     test1"
echo bonjour 2>hey test2
#double redirection
echo bonjour >> test3
echo bonjour>>test3>>test4
1>test1 2>test2 echo bonjour
1>test12>test2 echo bonjour
>test1 2>test2 echo bonjour
>> e
echo bonjour 1> "$PATHH"


#########Environnement#########
echo "$'PATH'"
echo $"coucou"
echo $PATH
ls $HOME/Desktop
echo "$PATH""" coucou
echo $PATH"coucou"
echo "hello"$PWD"coucou"
coucou$PWD test$COLORTERMlol lol$HOME
echo "bonjour$PATH$PWD"
echo "bonjour\$PATH$PWD"
echo $PATH"coucou"
echo $$$$$$$$
echo $12345
echo $$ -> affiche le pid mais franchement c'est pas demandé flemme